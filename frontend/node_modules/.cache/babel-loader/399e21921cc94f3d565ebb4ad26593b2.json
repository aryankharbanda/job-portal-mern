{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/listapplications.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Fuse from 'fuse.js';\nimport ls from \"local-storage\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default class ListApplications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      // sortedJobs: [],\n      ogJobs: [],\n      sortSalary: true,\n      sortDuration: true,\n      minsal: '',\n      maxsal: '',\n      duration: '',\n      search: '' // showalert:false,\n\n    }; // this.sortChangeSal = this.sortChangeSal.bind(this);\n    // this.sortChangeDur = this.sortChangeDur.bind(this);\n    // this.renderIconSal = this.renderIconSal.bind(this);\n    // this.renderIconDur = this.renderIconDur.bind(this);\n    // this.onChangeMinsal = this.onChangeMinsal.bind(this);\n    // this.onChangeMaxsal = this.onChangeMaxsal.bind(this);\n    // this.onSubmitFiltersal = this.onSubmitFiltersal.bind(this);\n    // this.handleClearFilters = this.handleClearFilters.bind(this);\n    // this.onChangeDuration = this.onChangeDuration.bind(this);\n    // this.onSubmitFilterdur = this.onSubmitFilterdur.bind(this);\n    // this.onChangeSearch = this.onChangeSearch.bind(this);\n    // this.handleApply = this.handleApply.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        ogJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // sortChangeSal(){\n  //     var array = this.state.jobs;\n  //     var flag = this.state.sortSalary;\n  //     array.sort( (a, b) => {\n  //         if(a.salary !== undefined && b.salary !== undefined){\n  //             return (1 - flag*2) * (a.salary - b.salary);\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //     });\n  //     this.setState({\n  //         jobs:array,\n  //         sortSalary:!this.state.sortSalary,\n  //     })\n  // }\n  // renderIconSal(){\n  //     if(this.state.sortSalary){\n  //         return(<ArrowDownwardIcon/>)\n  //     }\n  //     else{\n  //         return(<ArrowUpwardIcon/>)            \n  //     }\n  // }\n  // sortChangeDur(){\n  //     var array = this.state.jobs;\n  //     var flag = this.state.sortDuration;\n  //     array.sort( (a, b) => {\n  //         if(a.duration !== undefined && b.duration !== undefined){\n  //             return (1 - flag*2) * (a.duration - b.duration);\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //     });\n  //     this.setState({\n  //         jobs:array,\n  //         sortDuration:!this.state.sortDuration,\n  //     })\n  // }\n  // renderIconDur(){\n  //     if(this.state.sortDuration){\n  //         return(<ArrowDownwardIcon/>)\n  //     }\n  //     else{\n  //         return(<ArrowUpwardIcon/>)            \n  //     }\n  // }\n  // onChangeMinsal(e) {this.setState({minsal: e.target.value})};\n  // onChangeMaxsal(e) {this.setState({maxsal: e.target.value})};\n  // onChangeDuration(e) {this.setState({duration: e.target.value})};\n  // async onChangeSearch(e){\n  //     await this.setState({search: e.target.value});\n  //     if (this.state.search.length !== 0) {\n  //         const fuse = new Fuse(this.state.jobs, {keys: ['title']})\n  //         const results = fuse.search(this.state.search);\n  //         this.setState({\n  //             jobs: results.map(result => result.item)\n  //         })\n  //     }\n  // }\n  // onSubmitFiltersal(e) {\n  //     e.preventDefault();\n  //     var filteredJobs = [];\n  //     var i;\n  //     for (i = 0; i < this.state.jobs.length; ++i) {\n  //         if ((this.state.jobs[i].salary <= this.state.maxsal)&&(this.state.jobs[i].salary >= this.state.minsal)) {\n  //             filteredJobs.push(this.state.jobs[i]);\n  //         }\n  //     }\n  //     this.setState({\n  //         jobs:filteredJobs,\n  //     })\n  // };\n  // handleClearFilters(e) {\n  //     this.setState({\n  //         jobs:this.state.ogJobs,\n  //     })\n  // };\n  // onSubmitFilterdur(e) {\n  //     e.preventDefault();\n  //     var filteredJobs = [];\n  //     var i;\n  //     for (i = 0; i < this.state.jobs.length; ++i) {\n  //         if (this.state.jobs[i].duration < this.state.duration) {\n  //             filteredJobs.push(this.state.jobs[i]);\n  //         }\n  //     }\n  //     this.setState({\n  //         jobs:filteredJobs,\n  //     })\n  // };\n  // handleApply(jobid) {\n  //     console.log(\"apply\");\n  //     var soppromt = prompt('Statement of Purpose:');\n  //     if (soppromt !== null && soppromt.length < 250){\n  //         const newApplication = {\n  //             jobId: jobid,\n  //             appId: ls.get(\"id\"),\n  //             sop: soppromt,\n  //         }\n  //         axios.post('/jobs/apply', newApplication)\n  //             .then( res => {\n  //                 alert(\"Applied Successfully\");\n  //             })\n  //             .catch( err => {\n  //                 alert(err.response.data[Object.keys(err.response.data)[0]]);\n  //                 console.log(err.response);\n  //             });\n  //     }\n  //     else{\n  //         alert(\"SOP should be between 1 to 250 characters\");\n  //     }\n  // }\n\n\n  render() {\n    // console.log(this.state.showalert);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              text: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"btn-flat waves-effect\",\n                onClick: this.handleClearFilters,\n                children: \"Clear Filters/Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Search\",\n              fullWidth: true,\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)\n              },\n              value: this.state.search,\n              onChange: this.onChangeSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.onSubmitFiltersal,\n                noValidate: true,\n                autoComplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Salary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Min\",\n                  fullWidth: true,\n                  value: this.state.minsal,\n                  onChange: this.onChangeMinsal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Max\",\n                  fullWidth: true,\n                  value: this.state.maxsal,\n                  onChange: this.onChangeMaxsal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Filter Salary\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.onSubmitFilterdur,\n                noValidate: true,\n                autoComplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"1-7 months\",\n                  fullWidth: true,\n                  value: this.state.duration,\n                  onChange: this.onChangeDuration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Filter Duration\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Job-Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Recruiter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeSal,\n                      children: this.renderIconSal()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 49\n                    }, this), \"Salary\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeDur,\n                      children: this.renderIconDur()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 49\n                    }, this), \"Duration\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Apply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: this.state.jobs.map((job, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.jobtype\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.rec_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.salary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => this.handleApply(job._id),\n                      children: \"Apply\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 45\n                  }, this)]\n                }, ind, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/listapplications.component.js"],"names":["React","Component","axios","Link","Fuse","ls","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","ListApplications","constructor","props","state","jobs","ogJobs","sortSalary","sortDuration","minsal","maxsal","duration","search","componentDidMount","get","then","response","setState","data","catch","error","console","log","render","handleClearFilters","endAdornment","onChangeSearch","onSubmitFiltersal","onChangeMinsal","onChangeMaxsal","onSubmitFilterdur","onChangeDuration","sortChangeSal","renderIconSal","sortChangeDur","renderIconDur","map","job","ind","title","jobtype","rec_name","salary","handleApply","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Fuse from 'fuse.js';\nimport ls from \"local-storage\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default class ListApplications extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            jobs: [],\n            // sortedJobs: [],\n            ogJobs: [],\n            sortSalary:true,\n            sortDuration:true,\n            minsal:'',\n            maxsal:'',\n            duration:'',\n            search:'',\n            // showalert:false,\n        };\n\n        // this.sortChangeSal = this.sortChangeSal.bind(this);\n        // this.sortChangeDur = this.sortChangeDur.bind(this);\n        // this.renderIconSal = this.renderIconSal.bind(this);\n        // this.renderIconDur = this.renderIconDur.bind(this);\n        // this.onChangeMinsal = this.onChangeMinsal.bind(this);\n        // this.onChangeMaxsal = this.onChangeMaxsal.bind(this);\n        // this.onSubmitFiltersal = this.onSubmitFiltersal.bind(this);\n        // this.handleClearFilters = this.handleClearFilters.bind(this);\n        // this.onChangeDuration = this.onChangeDuration.bind(this);\n        // this.onSubmitFilterdur = this.onSubmitFilterdur.bind(this);\n        // this.onChangeSearch = this.onChangeSearch.bind(this);\n        // this.handleApply = this.handleApply.bind(this);\n\t}\n\n    componentDidMount() {\n        axios.get('/jobs')\n            .then(response => {\n                this.setState({jobs: response.data, ogJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    // sortChangeSal(){\n    //     var array = this.state.jobs;\n    //     var flag = this.state.sortSalary;\n    //     array.sort( (a, b) => {\n    //         if(a.salary !== undefined && b.salary !== undefined){\n    //             return (1 - flag*2) * (a.salary - b.salary);\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //     });\n    //     this.setState({\n    //         jobs:array,\n    //         sortSalary:!this.state.sortSalary,\n    //     })\n    // }\n    // renderIconSal(){\n    //     if(this.state.sortSalary){\n    //         return(<ArrowDownwardIcon/>)\n    //     }\n    //     else{\n    //         return(<ArrowUpwardIcon/>)            \n    //     }\n    // }\n\n    // sortChangeDur(){\n    //     var array = this.state.jobs;\n    //     var flag = this.state.sortDuration;\n    //     array.sort( (a, b) => {\n    //         if(a.duration !== undefined && b.duration !== undefined){\n    //             return (1 - flag*2) * (a.duration - b.duration);\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //     });\n    //     this.setState({\n    //         jobs:array,\n    //         sortDuration:!this.state.sortDuration,\n    //     })\n    // }\n    // renderIconDur(){\n    //     if(this.state.sortDuration){\n    //         return(<ArrowDownwardIcon/>)\n    //     }\n    //     else{\n    //         return(<ArrowUpwardIcon/>)            \n    //     }\n    // }\n\n    // onChangeMinsal(e) {this.setState({minsal: e.target.value})};\n    // onChangeMaxsal(e) {this.setState({maxsal: e.target.value})};\n    // onChangeDuration(e) {this.setState({duration: e.target.value})};\n\n    // async onChangeSearch(e){\n    //     await this.setState({search: e.target.value});\n    //     if (this.state.search.length !== 0) {\n\n    //         const fuse = new Fuse(this.state.jobs, {keys: ['title']})\n    //         const results = fuse.search(this.state.search);\n\n    //         this.setState({\n    //             jobs: results.map(result => result.item)\n    //         })\n    //     }\n    // }\n\n    // onSubmitFiltersal(e) {\n    //     e.preventDefault();\n\n    //     var filteredJobs = [];\n    //     var i;\n    //     for (i = 0; i < this.state.jobs.length; ++i) {\n    //         if ((this.state.jobs[i].salary <= this.state.maxsal)&&(this.state.jobs[i].salary >= this.state.minsal)) {\n    //             filteredJobs.push(this.state.jobs[i]);\n    //         }\n    //     }\n\n    //     this.setState({\n    //         jobs:filteredJobs,\n    //     })\n    // };\n\n    // handleClearFilters(e) {\n    //     this.setState({\n    //         jobs:this.state.ogJobs,\n    //     })\n    // };\n\n    // onSubmitFilterdur(e) {\n    //     e.preventDefault();\n\n    //     var filteredJobs = [];\n    //     var i;\n    //     for (i = 0; i < this.state.jobs.length; ++i) {\n    //         if (this.state.jobs[i].duration < this.state.duration) {\n    //             filteredJobs.push(this.state.jobs[i]);\n    //         }\n    //     }\n\n    //     this.setState({\n    //         jobs:filteredJobs,\n    //     })\n    // };\n\n    // handleApply(jobid) {\n    //     console.log(\"apply\");\n    //     var soppromt = prompt('Statement of Purpose:');\n\n    //     if (soppromt !== null && soppromt.length < 250){\n            \n    //         const newApplication = {\n    //             jobId: jobid,\n    //             appId: ls.get(\"id\"),\n    //             sop: soppromt,\n    //         }\n        \n    //         axios.post('/jobs/apply', newApplication)\n    //             .then( res => {\n    //                 alert(\"Applied Successfully\");\n    //             })\n    //             .catch( err => {\n    //                 alert(err.response.data[Object.keys(err.response.data)[0]]);\n    //                 console.log(err.response);\n    //             });\n    //     }\n    //     else{\n    //         alert(\"SOP should be between 1 to 250 characters\");\n    //     }\n    // }\n\n\trender() {\n        // console.log(this.state.showalert);\n\t\treturn (\n\t\t\t<div>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}> */}\n                    <Grid item fluid>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <ListItem text>\n                                <h3>Filters</h3>\n                                <br/>\n                                <Link to=\"#\" className=\"btn-flat waves-effect\" onClick={this.handleClearFilters}>\n                                    Clear Filters/Search\n                                </Link>\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        {/* <div className=\"form-group\">\n                            <label>Search: </label>\n                            <input type=\"text\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.search}\n                                onChange={this.onChangeSearch}\n                            />\n                        </div> */}\n                        <TextField \n                            id=\"standard-basic\" \n                            label=\"Search\" \n                            fullWidth={true}   \n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment>\n                                        <IconButton>\n                                            <SearchIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                )}}\n                            value={this.state.search}\n                            onChange={this.onChangeSearch}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form onSubmit={this.onSubmitFiltersal} noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} value={this.state.minsal} onChange={this.onChangeMinsal}/>\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true} value={this.state.maxsal} onChange={this.onChangeMaxsal}/>\n                                    <input type=\"submit\" value=\"Filter Salary\" className=\"btn btn-primary\"/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <form onSubmit={this.onSubmitFilterdur} noValidate autoComplete=\"off\">\n                                    <label>Duration</label>\n                                    <TextField id=\"standard-basic\" label=\"1-7 months\" fullWidth={true} value={this.state.duration} onChange={this.onChangeDuration}/>\n                                    <input type=\"submit\" value=\"Filter Duration\" className=\"btn btn-primary\"/>\n                                </form>                                                                \n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Job-Type</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>\n                                                <Button onClick={this.sortChangeSal}>\n                                                    {this.renderIconSal()}\n                                                </Button>\n                                                Salary\n                                            </TableCell>\n                                            <TableCell>\n                                                <Button onClick={this.sortChangeDur}>\n                                                    {this.renderIconDur()}\n                                                </Button>\n                                                Duration\n                                            </TableCell>\n                                            {/* <TableCell>Rating</TableCell> */}\n                                            <TableCell>Apply</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.map( (job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.jobtype}</TableCell>\n                                            <TableCell>{job.rec_name}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>\n                                                <Button onClick={() => this.handleApply(job._id)}>\n                                                    {/* {this.renderApplyState()} */}\n                                                    Apply\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}