{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/listapplications.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default class ListApplications extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetch = async () => {\n      const jobId = ls.get(\"jobId\");\n      const data = {\n        jobId: jobId\n      };\n\n      try {\n        // const instance = axios.create();\n        const response = await axios.post('/jobs/jobapps', data);\n        console.log(response.data);\n\n        if (response.data) {\n          this.setState({\n            apps: response.data,\n            ogApps: response.data\n          });\n        }\n\n        console.log(this.state.apps);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleAccept = applicationId => {};\n\n    this.state = {\n      apps: [],\n      ogApps: [],\n      sortName: true,\n      sortDate: true,\n      sortRate: true\n    };\n    this.sortChangeName = this.sortChangeName.bind(this);\n    this.renderIconName = this.renderIconName.bind(this);\n    this.sortChangeDate = this.sortChangeDate.bind(this);\n    this.renderIconDate = this.renderIconDate.bind(this);\n    this.sortChangeRate = this.sortChangeRate.bind(this);\n    this.renderIconRate = this.renderIconRate.bind(this); // this.renderAcceptButton = this.renderAcceptButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetch(); // console.log(\"b\".localeCompare(\"a\"));\n  }\n\n  sortChangeName() {\n    var array = this.state.apps;\n    var flag = this.state.sortName;\n    array.sort((a, b) => {\n      if (a.appId.name !== undefined && b.appId.name !== undefined) {\n        return (1 - flag * 2) * a.appId.name.localeCompare(b.appId.name);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      apps: array,\n      sortName: !this.state.sortName\n    });\n  }\n\n  renderIconName() {\n    if (this.state.sortName) {\n      return /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  sortChangeDate() {\n    // new Date(b.date) - new Date(a.date)\n    var array = this.state.apps;\n    var flag = this.state.sortDate;\n    array.sort((a, b) => {\n      if (a.date !== undefined && b.date !== undefined) {\n        return (1 - flag * 2) * (new Date(a.date) - new Date(b.date));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      apps: array,\n      sortDate: !this.state.sortDate\n    });\n  }\n\n  renderIconDate() {\n    if (this.state.sortDate) {\n      return /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  sortChangeRate() {\n    // var array = this.state.apps;\n    // var flag = this.state.sortRate;\n    // array.sort( (a, b) => {\n    //     if(a.rating !== undefined && b.rating !== undefined){\n    //         return (1 - flag*2) * ((a.rating) - (b.rating));\n    //     }\n    //     else{\n    //         return 1;\n    //     }\n    // });\n    this.setState({\n      // apps:array,\n      sortRate: !this.state.sortRate\n    });\n  }\n\n  renderIconRate() {\n    if (this.state.sortRate) {\n      return /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    }\n  } // renderAcceptButton = async (applicationId,appStatus) => {\n  //     if(appStatus===\"Applied\"){\n  //         return(\n  //             <Button>\n  //                 Shortlist\n  //             </Button> \n  //         )\n  //     }\n  //     else{\n  //         return(\n  //             <Button>\n  //                 Accept\n  //             </Button> \n  //         )\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeName,\n                      children: this.renderIconName()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 45\n                    }, this), \"Applicant Name\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Skills\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeDate,\n                      children: this.renderIconDate()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 49\n                    }, this), \"Date of Application\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Education\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"SOP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeRate,\n                      children: this.renderIconRate()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 49\n                    }, this), \"Rating\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Stage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Accept\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Reject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: this.state.apps.map((app, ind) => {\n                  let buttontext = null;\n                  if (app.status === \"Applied\") buttontext = 'Shortlist';else if (app.status === \"Shortlisted\") buttontext = 'Accept';else buttontext = 'Accepted';\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.appId.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.appId.aprofileId.skills\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.date.split(\"T\", 1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.appId.aprofileId.education\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.sop\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"(dne)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: app.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => this.handleAccept(app._id, app.status),\n                        children: buttontext\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Button // onClick={() => this.handleApply(app._id)}\n                      , {\n                        children: \"Reject\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 49\n                    }, this)]\n                  }, ind, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/listapplications.component.js"],"names":["React","Component","axios","ls","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","ArrowUpwardIcon","ArrowDownwardIcon","ListApplications","constructor","props","fetch","jobId","get","data","response","post","console","log","setState","apps","ogApps","state","error","handleAccept","applicationId","sortName","sortDate","sortRate","sortChangeName","bind","renderIconName","sortChangeDate","renderIconDate","sortChangeRate","renderIconRate","componentDidMount","array","flag","sort","a","b","appId","name","undefined","localeCompare","date","Date","render","map","app","ind","buttontext","status","aprofileId","skills","split","education","sop","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default class ListApplications extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            apps: [],\n            ogApps: [],\n            sortName:true,\n            sortDate:true,\n            sortRate:true,\n        };\n\n        this.sortChangeName = this.sortChangeName.bind(this);\n        this.renderIconName = this.renderIconName.bind(this);\n        this.sortChangeDate = this.sortChangeDate.bind(this);\n        this.renderIconDate = this.renderIconDate.bind(this);\n        this.sortChangeRate = this.sortChangeRate.bind(this);\n        this.renderIconRate = this.renderIconRate.bind(this);\n        \n        // this.renderAcceptButton = this.renderAcceptButton.bind(this);\n\n    }\n\n    fetch = async () => {\n        \n        const jobId = ls.get(\"jobId\");\n        const data = {jobId: jobId};\n\n        try {\n            // const instance = axios.create();\n            const response = await axios.post('/jobs/jobapps', data);\n            \n            console.log(response.data);\n            if(response.data){\n                this.setState({apps: response.data, ogApps:response.data});\n            }\n            console.log(this.state.apps);\n\n        } catch (error) {\n            console.log(error);\n        }        \n\n    }\n\n    componentDidMount() {\n        this.fetch();\n        // console.log(\"b\".localeCompare(\"a\"));\n    }\n\n    sortChangeName(){\n\n        var array = this.state.apps;\n        var flag = this.state.sortName;\n        array.sort( (a, b) => {\n            if(a.appId.name !== undefined && b.appId.name !== undefined){\n                return (1 - flag*2) * ((a.appId.name).localeCompare(b.appId.name));\n            }\n            else{\n                return 1;\n            }\n        });\n        this.setState({\n            apps:array,\n            sortName:!this.state.sortName,\n        })\n    }\n    renderIconName(){\n        if(this.state.sortName){\n            return(<ArrowDownwardIcon/>)\n        }\n        else{\n            return(<ArrowUpwardIcon/>)            \n        }\n    }\n\n    sortChangeDate(){\n        // new Date(b.date) - new Date(a.date)\n        var array = this.state.apps;\n        var flag = this.state.sortDate;\n        array.sort( (a, b) => {\n            if(a.date !== undefined && b.date !== undefined){\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n            }\n            else{\n                return 1;\n            }\n        });\n        this.setState({\n            apps:array,\n            sortDate:!this.state.sortDate,\n        })\n    }\n    renderIconDate(){\n        if(this.state.sortDate){\n            return(<ArrowDownwardIcon/>)\n        }\n        else{\n            return(<ArrowUpwardIcon/>)            \n        }\n    }\n\n    sortChangeRate(){\n        // var array = this.state.apps;\n        // var flag = this.state.sortRate;\n        // array.sort( (a, b) => {\n        //     if(a.rating !== undefined && b.rating !== undefined){\n        //         return (1 - flag*2) * ((a.rating) - (b.rating));\n        //     }\n        //     else{\n        //         return 1;\n        //     }\n        // });\n        this.setState({\n            // apps:array,\n            sortRate:!this.state.sortRate,\n        })\n    }\n    renderIconRate(){\n        if(this.state.sortRate){\n            return(<ArrowDownwardIcon/>)\n        }\n        else{\n            return(<ArrowUpwardIcon/>)            \n        }\n    }\n\n    // renderAcceptButton = async (applicationId,appStatus) => {\n    //     if(appStatus===\"Applied\"){\n    //         return(\n    //             <Button>\n    //                 Shortlist\n    //             </Button> \n    //         )\n            \n    //     }\n    //     else{\n    //         return(\n    //             <Button>\n    //                 Accept\n    //             </Button> \n    //         )\n    //     }\n    // }\n\n    handleAccept = (applicationId) => {\n\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <Grid container>\n                    <Grid >\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>\n                                            <Button onClick={this.sortChangeName}>\n                                                    {this.renderIconName()}\n                                                </Button>\n                                                Applicant Name\n                                            </TableCell>\n                                            <TableCell>Skills</TableCell>\n                                            <TableCell>\n                                                <Button onClick={this.sortChangeDate}>\n                                                    {this.renderIconDate()}\n                                                </Button>\n                                                Date of Application\n                                            </TableCell>\n                                            <TableCell>Education</TableCell>\n                                            <TableCell>SOP</TableCell>\n                                            <TableCell>\n                                                <Button onClick={this.sortChangeRate}>\n                                                    {this.renderIconRate()}\n                                                </Button>\n                                                Rating\n                                            </TableCell>\n                                            <TableCell>Stage</TableCell>\n                                            <TableCell>Accept</TableCell>\n                                            <TableCell>Reject</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.apps.map( (app,ind) => {\n                                        \n                                        let buttontext = null;\n                                        if(app.status===\"Applied\")\n                                            buttontext='Shortlist';\n                                        else if(app.status===\"Shortlisted\")\n                                            buttontext='Accept';\n                                        else\n                                            buttontext='Accepted';   \n                                        return(\n                                            <TableRow key={ind}>\n                                                <TableCell>{app.appId.name}</TableCell>\n                                                <TableCell>{app.appId.aprofileId.skills}</TableCell>\n                                                <TableCell>{app.date.split(\"T\",1)}</TableCell>\n                                                <TableCell>{app.appId.aprofileId.education}</TableCell>\n                                                <TableCell>{app.sop}</TableCell>\n                                                <TableCell>(dne)</TableCell>\n                                                <TableCell>{app.status}</TableCell>\n                                                <TableCell>\n                                                    <Button \n                                                        onClick={() => this.handleAccept(app._id,app.status)}\n                                                        >\n                                                        {buttontext}\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button \n                                                        // onClick={() => this.handleApply(app._id)}\n                                                        >\n                                                        Reject\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}