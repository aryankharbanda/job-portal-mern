{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/showjobs.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default class ShowJobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      sortedJobs: [],\n      sortSalary: true,\n      sortDuration: true\n    };\n    this.renderIconSal = this.renderIconSal.bind(this); // this.sortChange = this.sortChange.bind(this);\n\n    this.sortChangeSal = this.sortChangeSal.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // sortChange(){\n  //     /**\n  //      *      Note that this is sorting only at front-end.\n  //      */\n  //     var array = this.state.jobs;\n  //     var flag = this.state.sortSalary;\n  //     array.sort(function(a, b) {\n  //         if(a.date != undefined && b.date != undefined){\n  //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //     });\n  //     this.setState({\n  //         jobs:array,\n  //         sortSalary:!this.state.sortSalary,\n  //     })\n  // }\n\n\n  sortChangeSal() {\n    /**\n     *      Note that this is sorting only at front-end.\n     */\n    var array = this.state.jobs;\n    var flag = this.state.sortSalary;\n    array.sort((a, b) => {\n      if (a.salary != undefined && b.salary != undefined) {\n        return (1 - flag * 2) * (a.salary - b.salary);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortSalary: !this.state.sortSalary\n    });\n  }\n\n  renderIconSal() {\n    if (this.state.sortSalary) {\n      return /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              text: true,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Search\",\n              fullWidth: true,\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                autoComplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Salary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Min\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Max\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              divider: true,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"combo-box-demo\",\n                options: this.state.jobs,\n                getOptionLabel: option => option.name,\n                style: {\n                  width: 300\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Select Names\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Job-Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Recruiter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.sortChangeSal,\n                      children: this.renderIconSal()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 49\n                    }, this), \"Salary\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: this.state.jobs.map((job, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.jobtype\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.rec_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.salary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: job.duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this)]\n                }, ind, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/showjobs.component.js"],"names":["React","Component","axios","ls","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","ShowJobs","constructor","props","state","jobs","sortedJobs","sortSalary","sortDuration","renderIconSal","bind","sortChangeSal","componentDidMount","get","then","response","setState","data","catch","error","console","log","array","flag","sort","a","b","salary","undefined","render","endAdornment","option","name","width","params","map","job","ind","title","jobtype","rec_name","duration"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,eAAf;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,eAAe,MAAMC,QAAN,SAAuBrB,SAAvB,CAAiC;AAE/CsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACHC,MAAAA,IAAI,EAAE,EADH;AAEHC,MAAAA,UAAU,EAAE,EAFT;AAGHC,MAAAA,UAAU,EAAC,IAHR;AAIHC,MAAAA,YAAY,EAAC;AAJV,KAAb;AAOM,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB,CAVY,CAWZ;;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACN;;AAEEE,EAAAA,iBAAiB,GAAG;AAChB/B,IAAAA,KAAK,CAACgC,GAAN,CAAU,4BAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACX,QAAAA,IAAI,EAAEU,QAAQ,CAACE,IAAhB;AAAsBX,QAAAA,UAAU,EAACS,QAAQ,CAACE;AAA1C,OAAd;AACH,KAHN,EAIMC,KAJN,CAIY,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANN;AAOH,GAzB2C,CA4B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAR,EAAAA,aAAa,GAAE;AACX;AACR;AACA;AACQ,QAAIW,KAAK,GAAG,KAAKlB,KAAL,CAAWC,IAAvB;AACA,QAAIkB,IAAI,GAAG,KAAKnB,KAAL,CAAWG,UAAtB;AACAe,IAAAA,KAAK,CAACE,IAAN,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,UAAGD,CAAC,CAACE,MAAF,IAAYC,SAAZ,IAAyBF,CAAC,CAACC,MAAF,IAAYC,SAAxC,EAAkD;AAC9C,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgBE,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAA7B,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACJ,KAPD;AAQA,SAAKX,QAAL,CAAc;AACVX,MAAAA,IAAI,EAACiB,KADK;AAEVf,MAAAA,UAAU,EAAC,CAAC,KAAKH,KAAL,CAAWG;AAFb,KAAd;AAIH;;AACDE,EAAAA,aAAa,GAAE;AACX,QAAG,KAAKL,KAAL,CAAWG,UAAd,EAAyB;AACrB,0BAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGI;AACA,0BAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAGJsB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACa,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,0BAAW,iBAAjC;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,IAAI,MAAd;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,0BAAW,iBAAjC;AAAA,mCACI,QAAC,SAAD;AACA,cAAA,EAAE,EAAC,gBADH;AAEA,cAAA,KAAK,EAAC,QAFN;AAGA,cAAA,SAAS,EAAE,IAHX;AAIA,cAAA,UAAU,EAAE;AACRC,gBAAAA,YAAY,eACR,QAAC,cAAD;AAAA,yCACI,QAAC,UAAD;AAAA,2CACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,eA2Ba,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,0BAAW,iBAAjC;AAAA,oCAEI,QAAC,QAAD;AAAU,cAAA,MAAM,MAAhB;AAAA,qCACI;AAAM,gBAAA,UAAU,MAAhB;AAAiB,gBAAA,YAAY,EAAC,KAA9B;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,SAAD;AAAW,kBAAA,EAAE,EAAC,gBAAd;AAA+B,kBAAA,KAAK,EAAC,WAArC;AAAiD,kBAAA,SAAS,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,SAAD;AAAW,kBAAA,EAAE,EAAC,gBAAd;AAA+B,kBAAA,KAAK,EAAC,WAArC;AAAiD,kBAAA,SAAS,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eASI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI,QAAC,QAAD;AAAU,cAAA,MAAM,MAAhB;AAAiB,cAAA,OAAO,MAAxB;AAAA,qCACI,QAAC,YAAD;AACI,gBAAA,EAAE,EAAC,gBADP;AAEI,gBAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWC,IAFxB;AAGI,gBAAA,cAAc,EAAG0B,MAAD,IAAYA,MAAM,CAACC,IAHvC;AAII,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAJX;AAKI,gBAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,kBAAA,KAAK,EAAC,cAA7B;AAA4C,kBAAA,OAAO,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AAL7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACI,QAAC,KAAD;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAA,sCACI,QAAC,SAAD;AAAA,uCACI,QAAC,QAAD;AAAA,0CAOQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPR,eAQQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARR,eASQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATR,eAUQ,QAAC,SAAD;AAAA,4CACI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAE,KAAKvB,aADlB;AAAA,gCACkC,KAAKF,aAAL;AADlC;AAAA;AAAA;AAAA;AAAA,4BADJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVR,eAgBQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAsBI,QAAC,SAAD;AAAA,0BACK,KAAKL,KAAL,CAAWC,IAAX,CAAgB8B,GAAhB,CAAoB,CAACC,GAAD,EAAKC,GAAL,kBACjB,QAAC,QAAD;AAAA,0CACI,QAAC,SAAD;AAAA,8BAAYD,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,SAAD;AAAA,8BAAYF,GAAG,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,SAAD;AAAA,8BAAYH,GAAG,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,SAAD;AAAA,8BAAYJ,GAAG,CAACT;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,SAAD;AAAA,8BAAYS,GAAG,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA,mBAAeJ,GAAf;AAAA;AAAA;AAAA;AAAA,wBADH;AADL;AAAA;AAAA;AAAA;AAAA,sBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3Bb;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA4FA;;AA1K8C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default class ShowJobs extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            jobs: [],\n            sortedJobs: [],\n            sortSalary:true,\n            sortDuration:true\n        };\n\n        this.renderIconSal = this.renderIconSal.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n        this.sortChangeSal = this.sortChangeSal.bind(this);\n\t}\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/jobs')\n             .then(response => {\n                 this.setState({jobs: response.data, sortedJobs:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n\n    // sortChange(){\n    //     /**\n    //      *      Note that this is sorting only at front-end.\n    //      */\n    //     var array = this.state.jobs;\n    //     var flag = this.state.sortSalary;\n    //     array.sort(function(a, b) {\n    //         if(a.date != undefined && b.date != undefined){\n    //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //     });\n    //     this.setState({\n    //         jobs:array,\n    //         sortSalary:!this.state.sortSalary,\n    //     })\n    // }\n\n    sortChangeSal(){\n        /**\n         *      Note that this is sorting only at front-end.\n         */\n        var array = this.state.jobs;\n        var flag = this.state.sortSalary;\n        array.sort( (a, b) => {\n            if(a.salary != undefined && b.salary != undefined){\n                return (1 - flag*2) * (a.salary - b.salary);\n            }\n            else{\n                return 1;\n            }\n        });\n        this.setState({\n            jobs:array,\n            sortSalary:!this.state.sortSalary,\n        })\n    }\n    renderIconSal(){\n        if(this.state.sortSalary){\n            return(<ArrowDownwardIcon/>)\n        }\n        else{\n            return(<ArrowUpwardIcon/>)            \n        }\n    }\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <ListItem text>\n                                <h3>Filters</h3>\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> \n                                                <Button \n                                                    onClick={this.sortChange}>{this.renderIconSal()}\n                                                </Button>\n                                                Date\n                                            </TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Job-Type</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>\n                                                <Button \n                                                    onClick={this.sortChangeSal}>{this.renderIconSal()}\n                                                </Button>\n                                                Salary\n                                            </TableCell>\n                                            <TableCell>Duration</TableCell>\n                                            {/* <TableCell>Rating</TableCell> */}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.jobtype}</TableCell>\n                                            <TableCell>{job.rec_name}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}