{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/showjobs.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nexport default class ShowJobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      sortedUsers: [],\n      sortName: true\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user').then(response => {\n      this.setState({\n        users: response.data,\n        sortedUsers: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // onChange = e => {\n  // \tthis.setState({ [e.target.id]: e.target.value });\n  // };\n  // onChangeTitle(e) {this.setState({title: e.target.value})}\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newJob = {\n      // name: this.state.name,\n      title: this.state.title,\n      rec_email: ls.get(\"email\"),\n      rec_name: ls.get(\"name\"),\n      max_positions: this.state.max_positions,\n      max_applications: this.state.max_applications,\n      duration: this.state.duration,\n      // deadline: '',\n      jobtype: this.state.jobtype,\n      salary: this.state.salary\n    };\n    console.log(newJob);\n    axios.post('http://localhost:4000/jobs/create', newJob).then(res => {\n      alert(\"Job created successfully Successfully\"); // window.location.reload();\n    }).catch(res => {\n      alert(res.response.data[Object.keys(res.response.data)[0]]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              text: true,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Search\",\n              fullWidth: true,\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"mailbox folders\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                autoComplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Salary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Min\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Enter Max\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              divider: true,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"combo-box-demo\",\n                options: this.state.users,\n                getOptionLabel: option => option.name,\n                style: {\n                  width: 300\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Select Names\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/showjobs.component.js"],"names":["React","Component","axios","ls","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","ShowJobs","constructor","props","state","users","sortedUsers","sortName","componentDidMount","get","then","response","setState","data","catch","error","console","log","onSubmit","e","preventDefault","newJob","title","rec_email","rec_name","max_positions","max_applications","duration","jobtype","salary","post","res","alert","Object","keys","render","endAdornment","option","name","width","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from \"local-storage\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default class ShowJobs extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            users: [],\n            sortedUsers: [],\n            sortName:true\n        };\n\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n\t}\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user')\n             .then(response => {\n                 this.setState({users: response.data, sortedUsers:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n\n\t// onChange = e => {\n\t// \tthis.setState({ [e.target.id]: e.target.value });\n\t// };\n\n\t// onChangeTitle(e) {this.setState({title: e.target.value})}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst newJob = {\n\t\t\t// name: this.state.name,\n\t\t\ttitle: this.state.title,\n\t\t\trec_email: ls.get(\"email\"),\n\t\t\trec_name: ls.get(\"name\"),\n\t\t\tmax_positions: this.state.max_positions,\n\t\t\tmax_applications: this.state.max_applications,\n\t\t\tduration: this.state.duration,\n\t\t\t// deadline: '',\n\t\t\tjobtype: this.state.jobtype,\n\t\t\tsalary: this.state.salary,\n\t\t}\n\n\t\tconsole.log(newJob);\n\n\t\taxios.post('http://localhost:4000/jobs/create', newJob)\n\t\t\t.then( res => {\n\t\t\t\talert(\"Job created successfully Successfully\");\n\t\t\t\t// window.location.reload();\n\t\t\t})\n\t\t\t.catch( res => {\n\t\t\t\talert(res.response.data[Object.keys(res.response.data)[0]]);\n\t\t\t});\n\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <ListItem text>\n                                <h3>Filters</h3>\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.users}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell> \n                                                {/* <Button \n                                                    onClick={this.sortChange}>{this.renderIcon()}\n                                                </Button> */}\n                                                Date\n                                            </TableCell>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Email</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                {/* <TableBody>\n                                    {this.state.users.map((user,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{user.date}</TableCell>\n                                            <TableCell>{user.name}</TableCell>\n                                            <TableCell>{user.email}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody> */}\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}