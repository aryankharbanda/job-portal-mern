{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/myjobs.component.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport ls from \"local-storage\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Link } from \"react-router-dom\";\n\nclass MyJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleView = jobId => {\n      ls.set(\"jobId\", jobId);\n    };\n\n    this.state = {\n      jobs: []\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      rec_email: ls.get(\"email\")\n    };\n    console.log(ls.get(\"email\"));\n    axios.post('jobs/jobapps', data).then(response => {\n      console.log(response);\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Date Of Posting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Number of Applicants\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Remaining Number of Positions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"View Applicants\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: this.state.jobs.map((job, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: job.date.split(\"T\", 1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: job.no_applications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: job.max_positions - job.no_positions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"(dne)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"(dne)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/listapplications\",\n                    onclick: () => this.handleView(job._id),\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this)]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyJobs;","map":{"version":3,"sources":["/home/aryan/Desktop/iiit/4sem/dass/ass1/ass/frontend/src/components/myjobs.component.js"],"names":["React","Component","axios","ls","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Link","MyJobs","constructor","props","handleView","jobId","set","state","jobs","componentDidMount","data","rec_email","get","console","log","post","then","response","setState","catch","error","render","map","job","ind","title","date","split","no_applications","max_positions","no_positions","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport ls from \"local-storage\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Link } from \"react-router-dom\";\n\nclass MyJobs extends Component {\n    \n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            jobs: [],\n        };\n\t}\n\n    componentDidMount() {\n        const data = {\n            rec_email: ls.get(\"email\")\n        }\n        console.log(ls.get(\"email\"));\n\n        axios.post('jobs/jobapps', data)\n            .then(response => {\n                console.log(response);\n                this.setState({jobs: response.data});\n            })\n            .catch( error => {console.log(error);})\n    }\n\n    handleView = (jobId) => {\n        ls.set(\"jobId\",jobId);\n    }\n\n    render() {\n\t\treturn (\n            <div>\n                <Grid >\n                    <Paper>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                        <TableCell>Title</TableCell>\n                                        <TableCell>Date Of Posting</TableCell>\n                                        <TableCell>Number of Applicants</TableCell>\n                                        <TableCell>Remaining Number of Positions</TableCell>\n                                        <TableCell>Edit</TableCell>\n                                        <TableCell>Delete</TableCell>\n                                        <TableCell>View Applicants</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.jobs.map( (job,ind) => (\n                                    <TableRow key={ind}>\n                                        <TableCell>{job.title}</TableCell>\n                                        <TableCell>{job.date.split(\"T\",1)}</TableCell>\n                                        <TableCell>{job.no_applications}</TableCell>\n                                        <TableCell>{job.max_positions-job.no_positions}</TableCell>\n                                        <TableCell>(dne)</TableCell>\n                                        <TableCell>(dne)</TableCell>\n                                        <TableCell>\n                                            <Link to=\"/listapplications\" onclick={() => this.handleView(job._id)}>\n                                                View\n                                            </Link>\n                                        </TableCell>\n                                    </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </Paper>               \n                </Grid> \n            </div>\n\t\t);\n\t}\n}\nexport default MyJobs;\n"]},"metadata":{},"sourceType":"module"}